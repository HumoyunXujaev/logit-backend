# Generated by Django 5.1.5 on 2025-01-31 12:17

import django.core.validators
import django.db.models.deletion
from django.conf import settings
from django.db import migrations, models


class Migration(migrations.Migration):

    initial = True

    dependencies = [
        migrations.swappable_dependency(settings.AUTH_USER_MODEL),
    ]

    operations = [
        migrations.CreateModel(
            name='Vehicle',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('body_type', models.CharField(choices=[('tent', 'Tent'), ('refrigerator', 'Refrigerator'), ('isothermal', 'Isothermal'), ('container', 'Container'), ('car_carrier', 'Car Carrier'), ('board', 'Board')], max_length=20)),
                ('loading_type', models.CharField(choices=[('ramps', 'Ramps'), ('no_doors', 'No Doors'), ('side', 'Side Loading'), ('top', 'Top Loading'), ('hydro_board', 'Hydro Board')], max_length=20)),
                ('capacity', models.DecimalField(decimal_places=2, help_text='Capacity in tons', max_digits=10, validators=[django.core.validators.MinValueValidator(0)])),
                ('volume', models.DecimalField(decimal_places=2, help_text='Volume in cubic meters', max_digits=10, validators=[django.core.validators.MinValueValidator(0)])),
                ('length', models.DecimalField(decimal_places=2, max_digits=10, validators=[django.core.validators.MinValueValidator(0)])),
                ('width', models.DecimalField(decimal_places=2, max_digits=10, validators=[django.core.validators.MinValueValidator(0)])),
                ('height', models.DecimalField(decimal_places=2, max_digits=10, validators=[django.core.validators.MinValueValidator(0)])),
                ('registration_number', models.CharField(help_text='Vehicle registration number', max_length=50, unique=True)),
                ('registration_country', models.CharField(help_text='ISO country code', max_length=2)),
                ('adr', models.BooleanField(default=False, help_text='Has ADR certificate')),
                ('dozvol', models.BooleanField(default=False, help_text='Has DOZVOL')),
                ('tir', models.BooleanField(default=False, help_text='Has TIR')),
                ('license_number', models.CharField(blank=True, max_length=100, null=True)),
                ('is_active', models.BooleanField(default=True)),
                ('is_verified', models.BooleanField(default=False)),
                ('verification_date', models.DateTimeField(blank=True, null=True)),
                ('created_at', models.DateTimeField(auto_now_add=True)),
                ('updated_at', models.DateTimeField(auto_now=True)),
                ('owner', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, related_name='vehicles', to=settings.AUTH_USER_MODEL)),
                ('verified_by', models.ForeignKey(blank=True, null=True, on_delete=django.db.models.deletion.SET_NULL, related_name='verified_vehicles', to=settings.AUTH_USER_MODEL)),
            ],
            options={
                'ordering': ['-created_at'],
            },
        ),
        migrations.CreateModel(
            name='VehicleAvailability',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('start_date', models.DateField()),
                ('end_date', models.DateField(blank=True, null=True)),
                ('location', models.CharField(max_length=255)),
                ('note', models.TextField(blank=True, null=True)),
                ('created_at', models.DateTimeField(auto_now_add=True)),
                ('vehicle', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, related_name='availability', to='vehicles.vehicle')),
            ],
            options={
                'verbose_name_plural': 'Vehicle availabilities',
                'ordering': ['-start_date'],
            },
        ),
        migrations.CreateModel(
            name='VehicleDocument',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('type', models.CharField(choices=[('tech_passport', 'Technical Passport'), ('license', 'License'), ('insurance', 'Insurance'), ('adr_cert', 'ADR Certificate'), ('dozvol', 'DOZVOL'), ('tir', 'TIR'), ('other', 'Other')], max_length=20)),
                ('title', models.CharField(max_length=255)),
                ('file', models.FileField(upload_to='vehicle_documents/')),
                ('uploaded_at', models.DateTimeField(auto_now_add=True)),
                ('expiry_date', models.DateField(blank=True, null=True)),
                ('verified', models.BooleanField(default=False)),
                ('verified_at', models.DateTimeField(blank=True, null=True)),
                ('verification_notes', models.TextField(blank=True, null=True)),
                ('vehicle', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, related_name='documents', to='vehicles.vehicle')),
                ('verified_by', models.ForeignKey(blank=True, null=True, on_delete=django.db.models.deletion.SET_NULL, related_name='verified_vehicle_documents', to=settings.AUTH_USER_MODEL)),
            ],
            options={
                'ordering': ['-uploaded_at'],
            },
        ),
        migrations.CreateModel(
            name='VehicleInspection',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('type', models.CharField(choices=[('technical', 'Technical'), ('safety', 'Safety'), ('insurance', 'Insurance'), ('other', 'Other')], max_length=20)),
                ('inspection_date', models.DateField()),
                ('expiry_date', models.DateField()),
                ('result', models.BooleanField()),
                ('notes', models.TextField(blank=True, null=True)),
                ('created_at', models.DateTimeField(auto_now_add=True)),
                ('inspector', models.ForeignKey(null=True, on_delete=django.db.models.deletion.SET_NULL, related_name='vehicle_inspections', to=settings.AUTH_USER_MODEL)),
                ('vehicle', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, related_name='inspections', to='vehicles.vehicle')),
            ],
            options={
                'ordering': ['-inspection_date'],
            },
        ),
        migrations.AddIndex(
            model_name='vehicle',
            index=models.Index(fields=['registration_number'], name='vehicles_ve_registr_3774f3_idx'),
        ),
        migrations.AddIndex(
            model_name='vehicle',
            index=models.Index(fields=['owner'], name='vehicles_ve_owner_i_fb6fe6_idx'),
        ),
        migrations.AddIndex(
            model_name='vehicle',
            index=models.Index(fields=['is_active', 'is_verified'], name='vehicles_ve_is_acti_382e4a_idx'),
        ),
        migrations.AddIndex(
            model_name='vehicle',
            index=models.Index(fields=['body_type'], name='vehicles_ve_body_ty_fe2974_idx'),
        ),
        migrations.AddIndex(
            model_name='vehicleavailability',
            index=models.Index(fields=['vehicle', 'start_date'], name='vehicles_ve_vehicle_ecf1dc_idx'),
        ),
        migrations.AddIndex(
            model_name='vehicleavailability',
            index=models.Index(fields=['location'], name='vehicles_ve_locatio_023931_idx'),
        ),
        migrations.AddIndex(
            model_name='vehicledocument',
            index=models.Index(fields=['vehicle', 'type'], name='vehicles_ve_vehicle_380ab0_idx'),
        ),
        migrations.AddIndex(
            model_name='vehicledocument',
            index=models.Index(fields=['verified'], name='vehicles_ve_verifie_25734b_idx'),
        ),
        migrations.AddIndex(
            model_name='vehicledocument',
            index=models.Index(fields=['expiry_date'], name='vehicles_ve_expiry__3f4876_idx'),
        ),
        migrations.AddIndex(
            model_name='vehicleinspection',
            index=models.Index(fields=['vehicle', 'type'], name='vehicles_ve_vehicle_a7e3d1_idx'),
        ),
        migrations.AddIndex(
            model_name='vehicleinspection',
            index=models.Index(fields=['expiry_date'], name='vehicles_ve_expiry__1061d4_idx'),
        ),
    ]
